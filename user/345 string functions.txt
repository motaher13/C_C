//strncpy
#include<stdio.h>
int main()
{
    char str[20];
    char str1[6]="atyu";
    strncpy(str,str1,3);
    str[3]='\0';
    printf("%s",str);

}

//strcmpi
Same as strcmp() function. But, this function negotiates case.  “A” and “a” are treated as same

//strstr
#include<stdio.h>
#include<string.h>
int main()
{
    char str[20]="asdfgh";
    char str1[6]="io";
    int i=0;
    printf("%d\n",i);
    i=strstr(str,str1);
    printf("%d",i);
}


//strtoke
#include <stdio.h>
#include <string.h>
int main ()
{
  char string[50] ="Test,string1,Test,string2:Test:string3";
  char *p;
  printf ("String  \"%s\" is split into tokens:\n",string);
  p = strtok (string,",:");
  while (p!= NULL)
  {
    printf ("%s\n",p);
    p = strtok (NULL, ",:");
  }
  return 0;
}


//sprintf--to convert different data types combined into string

{
    sprintf(s1," i am %s %f %d fgdgds %lld",str,f,i,ll);
}

//sscanf---to scan a 'string with spaces' into many data types

{
    sscanf(str,"%s %s",a,b);
}

#include<stdio.h>
#include<stdlib.h>
int main()
{
    char str[]="mmmm 4";
    int eggcount;
    float cost;
    sscanf(str,"mmmm %d",&eggcount);
    printf("%d",eggcount);
}



//strcpy
{
     strcpy(str1, "abc");
}


//strspn
#include <stdio.h>
#include <string.h>

int main ()
{
   int len;
   const char str1[] = "ABCABDEFG019874";
   const char str2[] = "kyyyuAiBC";

   len = strspn(str1, str2);

   printf("Length of initial segment matching %d\n", len );

   return(0);
}














